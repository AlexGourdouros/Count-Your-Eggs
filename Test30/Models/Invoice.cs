//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Test30.Models
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;


    public partial class Invoice
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Invoice()
        {
            this.InvoiceItems = new HashSet<InvoiceItem>();
            this.PayBridges = new HashSet<PayBridge>();
        }
        [Display(Name = "Invoice ID #")]
        public int InvoiceID { get; set; }
        [Column(TypeName = "date")]
        [DataType(DataType.Date)]
        [Display(Name = "Date Created")]
        public System.DateTime InvoiceCreated { get; set; }
        //public decimal TotalPaid { get; set; }
        [Display(Name = "Total Paid")]
       // public decimal TotalPaid { get; set; }

       // private Nullable<decimal> _TotalPaid;
          
        public Nullable<decimal> TotalPaid
        {
            get
            {
                return
                  (PayBridges.Sum(b => (decimal?)b.Payment)) ?? 0;

            }
            set { }
        }
        

        [Display(Name = "Total Due")]
        //public Nullable<decimal> TotalDue { get; set; }

       // public Nullable<decimal> TotalDue { get; set; }

        //private Nullable<decimal> _TotalDue;
         
        public Nullable<decimal> TotalDue
        {
            get
            {
                return
                (InvoiceItems.Sum(b => (decimal?)b.ExtendedCost) - TotalPaid) ?? 0;

            }
            set {  }
        }
        

        //  public Nullable<decimal> Total { get; set; }
        [Display(Name = "Total")]
       // public Nullable<decimal> Total { get; set; }

       //private Nullable<decimal> _Total;
        
        public Nullable<decimal> Total
        {
            get
            {
                return
                (InvoiceItems.Sum(b => (decimal?)b.ExtendedCost)) ?? 0;

            }
            set {  }
        }
        


        [Display(Name = "Distributor")]

        public int DistributorId { get; set; }
        [Display(Name = "User")]

        public int UserID { get; set; }
        [Column(TypeName = "date")]
        [DataType(DataType.Date)]
        [Display(Name = "Date Received")]
        public System.DateTime ItemsReceived { get; set; }
        [Display(Name = "Invoice #")]

        public int InvoiceNumber { get; set; }
        [Display(Name = "Status")]


        public int statusID { get; set; }


       /* public int statusID
        {
            get
            {
                if (TotalDue <= 0)
                {
                    return statusID = 2;

                }
                else { return 1; }
            }

            set { }
        }
        */
            
        

       // public int statusID { get; set; }
       
   






    public virtual Distributor Distributor { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<InvoiceItem> InvoiceItems { get; set; }
        public virtual User User { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PayBridge> PayBridges { get; set; }
        public virtual Status Status { get; set; }
    }
}
