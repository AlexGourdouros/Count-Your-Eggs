//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Test30.Models
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;

    public partial class InvoiceItem
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public InvoiceItem()
        {
            this.Receipts = new HashSet<Receipt>();
        }
        [Display(Name = "Invoice Item ID #")]

        public int InvoiceItemID { get; set; }
        [Display(Name = "Invoice")]
        public int InvoiceID { get; set; }
        [Display(Name = "Item")]

        public int ItemID { get; set; }
        [Display(Name = "Quantity")]
        public int Quantity { get; set; }
       /* private int _quantity;
        public int Quantity
        {
            get
            {
                return _quantity - (Receipts.Sum(b => (int?)b.Quantity)) ?? 0;
            }
            set
            {
                if (_quantity < 0)
                {
                    _quantity = 0;
                }
                else
                {
                    _quantity = value;
                }
            }
        }
        */


        [Column(TypeName = "money")]
        [Display(Name = "Unit Cost")]
        public decimal Cost { get; set; }
        [Column(TypeName = "money")]
        [Display(Name = "Extended Cost")]
        public decimal ExtendedCost { get { return Quantity * Cost; } set { } }
        [Display(Name = "User")]

        public int UserID { get; set; }
        [Column(TypeName = "date")]
        [DataType(DataType.Date)]
        [Display(Name = "Expiration Date")]
        public System.DateTime ExpirationDate { get; set; }
        [Column(TypeName = "date")]
        [DataType(DataType.Date)]
        [Display(Name = "Date Added")]
        public System.DateTime DateAdded { get; set; }

        private DateTime _returnDate = DateTime.MinValue;
        public DateTime ReturnDate
        {
            get
            {
                return (_returnDate == DateTime.MinValue) ? DateTime.Now : _returnDate;
            }
            set { _returnDate = value; }
        }

        [Display(Name = "Status")]
        // public int statusID { get; set; }
        public int statusID
        {
            get
            {
                if (ReturnDate >= ExpirationDate)
                {
                    return statusID = 3;

                }
                else if (Quantity <= 0)
                { return 2; }
                else { return 1; }
            }

            set { }

        }

        public virtual Invoice Invoice { get; set; }
        public virtual Item Item { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Receipt> Receipts { get; set; }
        public virtual User User { get; set; }
        public virtual Status Status { get; set; }
    }
}
