@model Test30.Models.Spoilage

@{
	ViewBag.Title = "Edit";
	if (HttpContext.Current.Session["usedID"] == null)
	{ Response.Redirect("~/Login/Index", false); }
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>Spoilage</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.SpoilageID)

		<div class="form-group">
			@Html.LabelFor(model => model.DateSpoiled, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.DateSpoiled, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.DateSpoiled, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Reason, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.ItemID, "ItemID", htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownList("ItemID", null, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.ItemID, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-10">
				@Html.Hidden("UserID", null, new { Value = HttpContext.Current.Session["usedID"] })
				@Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Save" class="clickme" />
			</div>
		</div>
	</div>
}

<div>
	<span class="glyphicon glyphicon-triangle-left reglink"></span>@Html.ActionLink("Back to List", "Index", new { area = "" }, new { @class = "reglink" })
</div>
