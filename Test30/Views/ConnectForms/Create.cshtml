@{
	if (HttpContext.Current.Session["usedID"] != null)
	{ Layout = null; }
}


@model Test30.Models.ConnectForm
@using (Html.BeginForm("Create", "ConnectForms", FormMethod.Post))
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">

		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@{/*
				<div class="form-group">
					@Html.LabelFor(model => model.ConnectID, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.ConnectID, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.ConnectID, "", new { @class = "text-danger" })
					</div>
				</div>
			*/}

		<div class="form-group">
			@Html.LabelFor(model => model.FirstName, "First Name", htmlAttributes: new { @class = "control-label" })
			@Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control field" } })
			@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.LastName, "Last Name", htmlAttributes: new { @class = "control-label" })
			@Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control field" } })
			@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })

			@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control field" } })
			@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.PhoneNumber, "Phone Number", htmlAttributes: new { @class = "control-label" })

			@Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control field" } })
			@Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })

		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.RestaurantName, "Restaurant Name", htmlAttributes: new { @class = "control-label" })

			@Html.EditorFor(model => model.RestaurantName, new { htmlAttributes = new { @class = "form-control field" } })
			@Html.ValidationMessageFor(model => model.RestaurantName, "", new { @class = "text-danger" })

		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })

			@Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control field" } })
			@Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })

		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.CountryID, "Country", htmlAttributes: new { @class = "control-label" })

			@Html.DropDownList("CountryID", null, htmlAttributes: new { @class = "form-control field" })
			@Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })

		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label" })

			@Html.TextAreaFor(model => model.Message, new { htmlAttributes = new { @class = "form-control field" } })
			@Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })

		</div>
		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Create" class="btn btn-success" />
			</div>
		</div>
	</div>


}

